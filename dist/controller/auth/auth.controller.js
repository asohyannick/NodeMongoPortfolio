import express from "express";
import { createAnAcount } from "../../service/implementators/auth/register/register.impl";
import { signin } from "../../service/implementators/auth/login/login.impl";
import { updateMyAccount } from "../../service/implementators/auth/updateAccount/updateAccount.impl";
import { fetchAccounts } from "../../service/implementators/auth/fetchAccounts/fetchAccount.impl";
import { fetchAccount } from "../../service/implementators/auth/fetchAccount/fetchAccount.impl";
import { logout } from "../../service/implementators/auth/logout/logout.impl";
import { refreshAccessToken } from "../../service/implementators/auth/requestAccessToken/requestAccessTokken.impl";
import { removeAnAccount } from "../../service/implementators/auth/deleteAccount/deleteAccount.impl";
import { authToken } from "../../middleware/auth/auth.middle";
import { validate } from "../../middleware/globalValidator/globalValidator.middle";
import { userRegistration, userLogin, updateMyRegistrationAccount } from "../../util/validators";
const router = express.Router();
router.post('/register', validate(userRegistration), createAnAcount);
router.post('/login', authToken, validate(userLogin), signin);
router.post('/logout', logout);
router.post('/refresh-access-token', authToken, refreshAccessToken);
router.put('/update-account/:id', authToken, validate(updateMyRegistrationAccount), updateMyAccount);
router.get('/fetch-accounts', authToken, fetchAccounts);
router.get('/fetch-account/:id', authToken, fetchAccount);
router.delete('/delete-account/:id', authToken, removeAnAccount);
export default router;
